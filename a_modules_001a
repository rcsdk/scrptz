# Add new pacman.conf configuration
sudo tee /etc/pacman.conf <<EOF
[options]
RootDir = /
DBPath = /var/lib/pacman/
CacheDir = /var/cache/pacman/pkg/
LogFile = /var/log/pacman.log
GPGDir = /etc/pacman.d/gnupg/
HoldPkg = pacman glibc
XferCommand = /usr/bin/curl -C --output pac.log - -f %u > %o 
Architecture = auto

[core]
Include = /etc/pacman.d/mirrorlist

[extra]
Include = /etc/pacman.d/mirrorlist

[community]
Include = /etc/pacman.d/mirrorlist

[multilib]
Include = /etc/pacman.d/mirrorlist

[archlinuxfr]
SigLevel = Never
Server = http://repo.archlinux.fr/\$arch
EOF

# Create rc user
sudo useradd -m rc
echo "rc:0000" | sudo chpasswd
sudo usermod -aG wheel rc
echo "rc ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/rc
su - rc
sudo chown -R rc:rc /home/rc
sudo chmod -R 700 /home/rc

# Install yay (AUR helper)
sudo rm -rf yay
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
cd ..

# Install and configure Snapd
yay -S --noconfirm snapd
sudo systemctl enable --now snapd.socket
sudo snap install figma-linux

# Set Time Zone and Locale
sudo timedatectl set-timezone America/Sao_Paulo
sudo localectl set-locale LANG=en_US.UTF-8

# Initialize Pacman keyring
sudo pacman-key --init
sudo pacman-key --populate archlinux
sudo gpg --check-trustdb

# Update Pacman and install necessary packages
sudo pacman -Syy --needed
sudo rm -f /var/lib/pacman/db.lck
sudo pacman -S --noconfirm ufw apparmor openvpn chromium xorg-xinit xorg neofetch lolcat mesa intel-media-driver libva libva-intel-driver libva-utils intel-gpu-tools vulkan-tools vulkan-intel intel-ucode libglvnd

# Verify Vulkan setup
vulkaninfo | grep "GPU"

# Monitor GPU Performance
intel_gpu_top

# Create minimal xorg.conf
sudo tee /etc/X11/xorg.conf <<EOF
Section "ServerFlags"
    Option "AllowIndirectGLX" "off"
EndSection

Section "Device"
    Identifier  "Intel Graphics"
    Driver      "intel"
    Option      "DRI" "iris"
    Option      "TearFree" "true"
EndSection

Section "Monitor"
    Identifier "eDP1"
EndSection

Section "Screen"
    Identifier "Screen0"
    Device "Intel Graphics"
    Monitor "eDP1"
EndSection

Section "ServerLayout"
    Identifier "Layout0"
    Screen "Screen0"
EndSection
EOF

# Fix mkinitcpio error
sudo tee /etc/mkinitcpio.d/linux.preset <<EOF
ALL_config="/etc/mkinitcpio.conf"
ALL_kver="/boot/vmlinuz-linux"

PRESETS=('default')

default_image="/boot/initramfs-linux.img"
default_options=""
EOF
sudo mkinitcpio -p linux
sudo pacman -Syu

# Check system information and firmware
lsmod | grep xhci_pci && lsmod | grep ast && lsmod | grep aic94xx && lsmod | grep wd719x && dmesg | grep -i firmware

# FAKETIME cleanup
unset FAKETIME
ps aux | grep faketime
grep faketime ~/.bashrc ~/.zshrc ~/.profile
grep faketime /etc/profile.d/*
sudo pacman -R --noconfirm libfaketime
sudo killall faketime

# Configure Display Brightness
xrandr --output eDP1 --brightness 0.4

# Harden Kernel Parameters
sudo tee /etc/sysctl.d/99-custom.conf <<EOF
kernel.dmesg_restrict = 1
kernel.kptr_restrict = 2
kernel.unprivileged_bpf_disabled = 1
kernel.randomize_va_space = 2
kernel.modules_disabled = 1
fs.suid_dumpable = 0
net.ipv4.tcp_syncookies = 1
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0
kernel.exec-shield = 1
kernel.debugfs_restrict = 1
vm.mmap_min_addr = 4096
kernel.exec-shield = 1
vm.mmap_rnd_bits = 24
vm.mmap_rnd_compat_bits = 16
EOF
sudo sysctl --system

# Enable and configure UFW
sudo systemctl enable --now ufw
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh
sudo ufw reload

# Disable and mask unnecessary services
for service in alsa-restore.service getty@tty1.service ip6tables.service iptables.service cups avahi-daemon bluetooth; do
    sudo systemctl disable "$service"
    sudo systemctl mask "$service"
done

# Prevent overlay
sudo sed -i 's/ overlay//g' /etc/X11/xorg.conf
sudo sed -i 's/ allow-overlay//g' /etc/security/limits.conf

# AppArmor setup
sudo systemctl enable apparmor
sudo systemctl start apparmor
sudo aa-enforce /etc/apparmor.d/*

# Install and configure OpenVPN
sudo pacman -S --noconfirm openvpn
sudo tee /etc/openvpn/client.conf <<EOF
client
dev tun
proto udp
remote your.vpn.server 1194
resolv-retry infinite
nobind
persist-key
persist-tun
ca ca.crt
cert client.crt
key client.key
remote-cert-tls server
cipher AES-256-CBC
verb 3
EOF
sudo systemctl enable openvpn@client
sudo systemctl start openvpn@client
sudo systemctl status openvpn@client

# Set DNS to Cloudflare
echo "nameserver 1.1.1.1" | sudo tee /etc/resolv.conf
echo "nameserver 9.9.9.9" | sudo tee -a /etc/resolv.conf
sudo chattr +i /etc/resolv.conf

# Configure Sudo timeout
echo 'Defaults timestamp_timeout=5' | sudo tee -a /etc/sudoers

# Secure important files
for file in "/etc/ssh/sshd_config" "/etc/shadow" "/etc/gshadow" "/etc/passwd" "/etc/group" "/boot" "/etc/sudoers" "/var/log"; do
    sudo chmod 600 "$file"
    sudo chown root:root "$file"
done

# Clean Pacman cache
sudo pacman -Scc --noconfirm

# Clone and bootstrap GameMode
git clone https://github.com/FeralInteractive/gamemode.git
cd gamemode
./bootstrap.sh
cd ..

# Reinstall Firefox
sudo pacman -Rns firefox
sudo pacman -Scc
sudo pacman -S --noconfirm firefox
rm -rf ~/.mozilla/firefox
firefox --no-remote -CreateProfile "rc ~/.mozilla/firefox/rc"

# Configure Hardware Acceleration in Firefox (manually)
firefox -P rc about:config
# Set the following preferences manually or via script
# gfx.webrender.all=true
# layers.acceleration.force-enabled=true
# webgl.force-enabled=true
# media.ffmpeg.vaapi.enabled=true

# Install and prepare Chromium
sudo pacman -S --noconfirm chromium
