#!/bin/bash
set -e

# Run this script as root. No exceptions.
if [[ $EUID -ne 0 ]]; then
  echo "Run this script as root or with sudo privileges."
  exit 1
fi

echo "[INFO] Updating repositories and upgrading system packages..."
apt update && apt -y upgrade

# Install essential tools
echo "[INFO] Installing essential tools..."
apt install -y git wget curl build-essential python3 python3-pip python3-venv \
    aircrack-ng hcxtools hcxdumptool hashcat bettercap reaver bully net-tools dnsmasq \
    hostapd iw wireless-tools rfkill screen tmux jq xmlstarlet

# Install Bettercap (ensure latest version)
echo "[INFO] Setting up Bettercap..."
snap install bettercap || apt install -y bettercap

# Install and update Wifite2
echo "[INFO] Setting up Wifite2..."
if [ ! -d "/opt/wifite2" ]; then
  git clone https://github.com/derv82/wifite2.git /opt/wifite2
fi
cd /opt/wifite2 && git pull && python3 setup.py install

# Install and update Airgeddon
echo "[INFO] Setting up Airgeddon..."
if [ ! -d "/opt/airgeddon" ]; then
  git clone https://github.com/v1s1t0r1sh3r3/airgeddon.git /opt/airgeddon
fi
cd /opt/airgeddon && git pull

# Install and update Fluxion
echo "[INFO] Setting up Fluxion..."
if [ ! -d "/opt/fluxion" ]; then
  git clone https://github.com/FluxionNetwork/fluxion.git /opt/fluxion
fi
cd /opt/fluxion && git pull

# Install and update Hashcat
echo "[INFO] Setting up Hashcat..."
if hash hashcat 2>/dev/null; then
  apt purge -y hashcat
fi
apt install -y hashcat

# GEM 1: Install Pwnagotchi Framework
# Automates Wi-Fi cracking and learning over time using AI
echo "[INFO] Installing Pwnagotchi - The AI-driven Wi-Fi cracker..."
if [ ! -d "/opt/pwnagotchi" ]; then
  git clone https://github.com/evilsocket/pwnagotchi.git /opt/pwnagotchi
fi
cd /opt/pwnagotchi && git pull && pip3 install -r requirements.txt

# GEM 2: Install CrackMapExec for Lateral Movement
# Swiss-army knife for pentesters, critical for post-Wi-Fi exploitation
echo "[INFO] Setting up CrackMapExec (CME)..."
pip3 install crackmapexec || apt install -y crackmapexec

# Verify installations
echo "[INFO] Verifying installations..."
declare -A tools=(
  ["Bettercap"]="bettercap --version"
  ["Wifite2"]="wifite --help"
  ["Airgeddon"]="bash /opt/airgeddon/airgeddon.sh --help"
  ["Fluxion"]="bash /opt/fluxion/fluxion.sh --help"
  ["Hashcat"]="hashcat --version"
  ["Pwnagotchi"]="python3 /opt/pwnagotchi/pwnagotchi.py --help"
  ["CrackMapExec"]="crackmapexec --version"
)

for tool in "${!tools[@]}"; do
  if ${tools[$tool]} >/dev/null 2>&1; then
    echo "[OK] $tool is installed and functional."
  else
    echo "[ERROR] $tool failed to install correctly."
  fi
done

echo "[INFO] All necessary packages and hidden gems are updated and installed."
